# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'


stages:
- stage: Prepare
  displayName: Prepare Steps
  jobs:
  - job: Prepare_and_Publish
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: CopyFiles@2
      inputs:
        SourceFolder: 'provisioning'
        Contents: '**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)\provisioning'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        publishWebProjects: true
        arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'

- stage: Test
  displayName: Tests
  jobs:
  - job: Tests
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '**/*Test*.csproj'
- stage: Service_1
  displayName: Build and push to Docker Hub Service 1
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Docker@2
      displayName: Build an image and Push to Docker Hub
      inputs:
        containerRegistry: 'DockerHubServiceConnection'
        repository: $(repository1)
        command: buildAndPush
        dockerfile: '$(Build.SourcesDirectory)/Mikolaj.Samulak.Service1/Dockerfile'
        tags: |
          $(tag) 
- stage: Service_2
  displayName: Build and push to Docker Hub Service 2
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Docker@2
      displayName: Build an image and Push to Docker Hub
      inputs:
        containerRegistry: 'DockerHubServiceConnection'
        repository: $(repository2)
        command: buildAndPush
        dockerfile: '$(Build.SourcesDirectory)/Mikolaj.Samulak.Service2/Dockerfile'
        tags: |
          $(tag) 
- stage: Service_3
  displayName: Build and push to Docker Hub Service 3
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Docker@2
      displayName: Build an image and Push to Docker Hub
      inputs:
        containerRegistry: 'DockerHubServiceConnection'
        repository: $(repository3)
        command: buildAndPush
        dockerfile: '$(Build.SourcesDirectory)/Mikolaj.Samulak.Service3/Dockerfile'
        tags: |
          $(tag)           
- stage: ARM_Azure
  displayName: Azure ARM
  jobs:
  - job: Deploy
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: AzureResourceManagerTemplateDeployment@3
      inputs:
        deploymentScope: 'Resource Group'
        azureResourceManagerConnection: 'Azure-PayAsYouGoSub'
        subscriptionId: 'f6867172-02eb-4bc3-8633-94839619a630'
        action: 'Create Or Update Resource Group'
        resourceGroupName: 'TestAll'
        location: 'West Europe'
        templateLocation: 'Linked artifact'
        csmFile: 'provisioning/template.json'
        csmParametersFile: 'provisioning/parameters.json'
        overrideParameters: '-subscriptionId "f6867172-02eb-4bc3-8633-94839619a630" -name "testappms" -location "West Europe" -hostingPlanName "AppServicePlanAppTest" -serverFarmResourceGroup "testall" -alwaysOn false -linuxFxVersion "DOTNETCORE|3.1"'
        deploymentMode: 'Incremental'
    - task: DownloadBuildArtifacts@1
      inputs:
        buildType: 'current'
        downloadType: 'specific'
        downloadPath: '$(System.ArtifactsDirectory)'
    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'Azure-PayAsYouGoSub'
        appType: 'webAppLinux'
        WebAppName: 'testappms'
        packageForLinux: '$(System.ArtifactsDirectory)/**/*Service1.zip'
        RuntimeStack: 'DOTNETCORE|3.1'